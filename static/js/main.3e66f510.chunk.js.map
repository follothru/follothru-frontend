{"version":3,"sources":["assets/images/logo-black.png","assets/images/logo-white.png","redux/auth/actions.js","redux/auth/selectors.js","utils/hooks.js","layouts/LoginLayout/LoginLayout.js","utils/storageUtils.js","redux/courses/selectors.js","redux/courses/actions.js","components/Spinner/Spinner.js","components/CourseCard/CourseCard.js","utils/utils.js","layouts/CoursesLayout/CreateNewCourseModal.js","layouts/CoursesLayout/CoursesLayout.js","redux/course/selectors.js","redux/course/actions.js","redux/reminders/actions.js","redux/reminders/selectors.js","utils/dateUtils.js","components/RemindersList/ReminderCard.js","components/RemindersList/RemindersList.js","layouts/CourseLayout/CreateReminderModal.js","layouts/CourseLayout/CourseLayout.js","components/AppBar/AppBar.js","components/SideBar/SideBar.js","layouts/MainLayout/MainLayout.js","App.js","serviceWorker.js","redux/auth/reducers.js","redux/courses/reducers.js","redux/course/reducers.js","redux/reminders/reducers.js","redux/rootReducer.js","config/env.js","services/httpService.js","services/client.js","config/config.js","services/authService.js","redux/auth/sagas.js","services/courseService.js","redux/courses/sagas.js","redux/course/sagas.js","redux/reminders/sagas.js","redux/rootSaga.js","config/configureStore.js","index.js"],"names":["module","exports","types","SIGN_IN","SIGN_IN_SUCCESS","SIGN_IN_FAILURE","CLEAR_ERROR","GET_USER_INFO","GET_USER_INFO_SUCCESS","GET_USER_INFO_FAILURE","SIGN_OUT","SIGN_OUT_SUCCESS","SIGN_OUT_FAILURE","signInSuccess","token","type","signInFailure","error","getUserInfoSuccess","user","getUserInfoFailure","authDomainSelector","state","auth","tokenSelector","createSelector","substate","loading","userSelector","useFormInput","initValue","useState","value","setValue","onChange","e","target","useDatePickerInput","selected","mapDispatchToProps","signIn","email","password","connect","emailInput","passwordInput","to","className","Container","Row","Col","md","alt","src","logoImage","Form","onSubmit","preventDefault","Group","controlId","Control","placeholder","Button","size","block","storageKeys","getAuthToken","sessionStorage","getItem","setAuthToken","setItem","clearAuthToken","removeItem","selectCoursesDomain","courses","coursesSelector","coursesLoadingSelector","GET_COURSES","GET_COURSES_SUCCESS","GET_COURSES_FAILURE","CREATE_NEW_COURSE","CREATE_NEW_COURSE_SUCCESS","CREATE_NEW_COURSE_FAILURE","getCourses","getCoursesSuccess","getCoursesFailure","createNewCourseSuccess","course","createNewCourseFailure","Spinner","animation","variant","CourseCard","link","Card","style","width","Body","Title","name","joinUrls","base","path","baseParts","_","split","pathParts","concat","filter","part","index","join","createNewCourse","onHide","show","courseNameInput","Modal","backdrop","centered","Header","closeButton","id","Label","Footer","onClick","isLoading","match","showCreateModal","setShowCreateModal","useEffect","map","key","url","courseDomainSelector","courseSelector","courseLoadingSelector","GET_COURSE","GET_COURSE_SUCCESS","GET_COURSE_FAILURE","getCourseSuccess","getCourseFailure","GET_REMINDERS","GET_REMINDERS_SUCCESS","GET_REMINDERS_FAILURE","CREATE_REMINDER","CREATE_REMINDER_SUCCESS","CREATE_REMINDER_FAILURE","getRemindersSuccess","reminders","getRemindersFailure","remindersDomainSelector","remindersLoadingSelector","remindersSelector","isSameOrAfterNow","date","moment","isSameOrAfter","now","compareDates","a","b","getTime","ReminderCard","reminder","events","upcommingDates","event","Date","dateTime","sort","slice","currYear","getFullYear","currMonth","getMonth","upcommingDatesStr","year","month","getDate","str","getMonthShortForm","getDay","getWeekdayShortForm","as","Subtitle","prototypes","PropTypes","object","isRequired","length","expirationTypes","createReminder","endDateInput","startDateInput","startTimeInput","canExpireInput","renderSendInAdvancedInput","Fragment","timeCaption","dateFormat","showTimeSelect","showTimeSelectOnly","console","log","getCourse","courseId","getReminders","params","showCreate","setShowCreate","signOut","Navbar","collapseOnSelect","expand","bg","Brand","href","height","Toggle","aria-controls","Collapse","Nav","NavDropdown","title","preferName","Item","Divider","withRouter","location","history","screen","results","getScreen","pathname","defaultActiveKey","onSelect","push","Link","eventKey","OverViewLayout","getUserInfo","fluid","exact","component","CoursesLayout","CourseLayout","ProtectedRoute","Component","rest","render","props","undefined","process","App","basename","MainLayout","LoginLayout","Boolean","window","hostname","initialState","authReducer","action","coursesReducer","courseReducer","remindersInitialState","remindersReducer","combineReducers","development","serviceUrl","production","getBearerToken","post","body","headers","options","json","rp","get","backendUrl","urls","makeUrl","doAuthGet","Object","assign","Authorization","httpService","doAuthPost","username","header","client","handleSignIn","handleGetUserInfo","call","authService","put","message","details","handleSignOut","handleSignInSuccess","handleGetUserInfoFailure","takeLatest","getCourseById","getRemindersForCourse","handleGetCourses","handleCreateNewCourse","courseService","result","handleGetCourse","handleGetReminders","all","fork","authSagas","coursesSagas","courseSagas","remindersSagas","store","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","sagaMiddleware","createSagaMiddleware","middlewares","createStore","rootReducer","applyMiddleware","run","rootSaga","configureStore","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"uHAAAA,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,ucCA9BC,EAAQ,CACnBC,QAAS,eACTC,gBAAiB,uBACjBC,gBAAiB,uBAEjBC,YAAa,mBAEbC,cAAe,qBACfC,sBAAuB,6BACvBC,sBAAuB,6BAEvBC,SAAU,gBACVC,iBAAkB,wBAClBC,iBAAkB,yBASPC,EAAgB,SAAAC,GAAK,MAAK,CACrCC,KAAMb,EAAME,gBACZU,UAGWE,EAAgB,SAAAC,GAAK,MAAK,CACrCF,KAAMb,EAAMG,gBACZY,UAWWC,EAAqB,SAAAC,GAAI,MAAK,CACzCJ,KAAMb,EAAMM,sBACZW,SAGWC,EAAqB,SAAAH,GAAK,MAAK,CAC1CF,KAAMb,EAAMO,sBACZQ,U,QC7CWI,EAAqB,SAAAC,GAAK,OAAIA,EAAMC,MAYpCC,GAVkBC,YAC7BJ,EACA,SAAAK,GAAQ,OAAIA,EAASC,UAGUF,YAC/BJ,EACA,SAAAK,GAAQ,OAAIA,EAAST,QAGMQ,YAC3BJ,EACA,SAAAK,GAAQ,OAAIA,EAASZ,SAGVc,EAAeH,YAC1BJ,EACA,SAAAK,GAAQ,OAAIA,EAASP,O,gFCnBhB,SAASU,IAA8B,IAAjBC,EAAgB,uDAAJ,GAAI,EACjBC,mBAASD,GADQ,mBACpCE,EADoC,KAC7BC,EAD6B,KAG3C,MAAO,CAAED,QAAOE,SADC,SAAAC,GAAC,OAAIF,EAASE,EAAEC,OAAOJ,SAInC,SAASK,IAAoC,IAAjBP,EAAgB,uDAAJ,GAAI,EACvBC,mBAASD,GADc,mBAEjD,MAAO,CAAEQ,SAFwC,KAEvBJ,SAFuB,MCGnD,IAkDMK,EAAqB,CACzBC,OH9CoB,SAACC,EAAOC,GAAR,MAAsB,CAC1C3B,KAAMb,EAAMC,QACZsC,QACAC,cG8CaC,cARS,SAAArB,GAAK,MAAK,CAChCR,MAAOU,EAAcF,KAOiBiB,EAAzBI,CAtDK,SAAC,GAAuB,IAArBH,EAAoB,EAApBA,OAAQ1B,EAAY,EAAZA,MACvB8B,EAAaf,IACbgB,EAAgBhB,IAOtB,OAAc,OAAVf,EACK,kBAAC,IAAD,CAAUgC,GAAG,SAIpB,yBAAKC,UAAU,gBACb,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAI,IACT,kBAACD,EAAA,EAAD,CAAKC,GAAI,GACP,yBAAKC,IAAI,GAAGL,UAAU,WAAWM,IAAKC,MACtC,kBAACC,EAAA,EAAD,CAAMC,SAhBhB,SAAqBrB,GACnBA,EAAEsB,iBACFjB,EAAOI,EAAWZ,MAAOa,EAAcb,SAe7B,kBAACuB,EAAA,EAAKG,MAAN,CAAYC,UAAU,uBACpB,kBAACJ,EAAA,EAAKK,QAAN,eAAc7C,KAAK,QAAQ8C,YAAY,SAAYjB,KAGrD,kBAACW,EAAA,EAAKG,MAAN,CAAYC,UAAU,0BACpB,kBAACJ,EAAA,EAAKK,QAAN,eAAc7C,KAAK,WAAW8C,YAAY,YAAehB,KAG3D,kBAACU,EAAA,EAAKG,MAAN,KACE,kBAACI,EAAA,EAAD,CAAQ/C,KAAK,SAASgD,KAAK,KAAKC,OAAK,GAArC,cAIN,kBAACd,EAAA,EAAD,CAAKC,GAAI,SC7CNc,EACC,aAGDC,EAAe,kBAAMC,eAAeC,QAAQH,IAE5CI,EAAe,SAAAvD,GAAK,OAAIqD,eAAeG,QAAQL,EAAwBnD,IAEvEyD,EAAiB,kBAAMJ,eAAeK,WAAWP,ICNjDQ,EAAsB,SAAAnD,GAAK,OAAIA,EAAMoD,SAErCC,EAAkBlD,YAC7BgD,EACA,SAAA/C,GAAQ,OAAIA,EAASgD,UAGVE,EAAyBnD,YACpCgD,EACA,SAAA/C,GAAQ,OAAIA,EAASC,UCXVzB,EAAQ,CACnB2E,YAAa,sBACbC,oBAAqB,8BACrBC,oBAAqB,8BACrBC,kBAAmB,4BACnBC,0BAA2B,oCAC3BC,0BAA2B,qCAGhBC,EAAa,iBAAO,CAC/BpE,KAAMb,EAAM2E,cAGDO,EAAoB,SAAAV,GAAO,MAAK,CAC3C3D,KAAMb,EAAM4E,oBACZJ,YAGWW,EAAoB,SAAApE,GAAK,MAAK,CACzCF,KAAMb,EAAM6E,oBACZ9D,UAQWqE,EAAyB,SAAAC,GAAM,MAAK,CAC/CxE,KAAMb,EAAM+E,0BACZM,WAGWC,EAAyB,SAAAvE,GAAK,MAAK,CAC9CF,KAAMb,EAAMgF,0BACZjE,U,SC5BawE,G,OAHC,kBACd,yBAAK1C,UAAU,qBAAoB,kBAAC,IAAD,CAAkB2C,UAAU,OAAO3C,UAAU,UAAU4C,QAAQ,e,SCwBrFC,G,OAvBI,SAAC,GAAsB,IAApBL,EAAmB,EAAnBA,OAAQM,EAAW,EAAXA,KAS5B,OACE,yBAAK9C,UAAU,yBACb,kBAAC,IAAD,CAAMA,UAAU,cAAcD,GAAI+C,GATpC,kBAACC,EAAA,EAAD,CAAMC,MAAO,CAAEC,MAAO,UACpB,kBAACF,EAAA,EAAKG,KAAN,KACE,kBAACH,EAAA,EAAKI,MAAN,KAAaX,EAAOY,Y,iBCRfC,EAAW,SAACC,EAAMC,GAC7B,IAAMC,EAAYC,IAAEC,MAAMJ,EAAM,KAC1BK,EAAYF,IAAEC,MAAMH,EAAM,KAKhC,OAJeE,IAAEG,OAAOJ,EAAWG,GAChCE,OAAO,SAACC,EAAMC,GAAP,OAA2B,IAAVA,GAAwB,KAATD,IACvCE,KAAK,M,kBCsCJxE,EAAqB,CACzByE,gBJvB6B,SAAAb,GAAI,MAAK,CACtCpF,KAAMb,EAAM8E,kBACZmB,UIwBaxD,eAAQ,KAAMJ,EAAdI,CA1Cc,SAAC,GAAuC,IAArCsE,EAAoC,EAApCA,OAAQC,EAA4B,EAA5BA,KAAMF,EAAsB,EAAtBA,gBACtCG,EAAkBtF,IAOxB,OACE,kBAACuF,EAAA,EAAD,CAAOH,OAAQA,EAAQC,KAAMA,EAAMnD,KAAK,KAAKsD,SAAS,SAASC,UAAQ,GACrE,kBAACF,EAAA,EAAMG,OAAP,CAAcC,aAAW,GACvB,kBAACJ,EAAA,EAAMlB,MAAP,CAAauB,GAAG,iCAAhB,sBAIF,kBAACL,EAAA,EAAMnB,KAAP,KACE,kBAAC1C,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKG,MAAN,KACE,kBAACH,EAAA,EAAKmE,MAAN,aAGA,kBAACnE,EAAA,EAAKK,QAAN,eAAc7C,KAAK,OAAO8C,YAAY,eAAkBsD,OAI9D,kBAACC,EAAA,EAAMO,OAAP,KACE,kBAAC7D,EAAA,EAAD,CAAQ8D,QAvBO,WACnBZ,EAAgBG,EAAgBnF,OAChCiF,MAqBI,cCsBF1E,GAAqB,CACzB4C,cASaxC,eAfS,SAAArB,GAAK,MAAK,CAChCoD,QAASC,EAAgBrD,GACzBuG,UAAWjD,EAAuBtD,KAaIiB,GAAzBI,CAnDO,SAAC,GAA+C,IAA7C+B,EAA4C,EAA5CA,QAASmD,EAAmC,EAAnCA,UAAW1C,EAAwB,EAAxBA,WAAY2C,EAAY,EAAZA,MAAY,EAIrB/F,oBAAS,GAJY,mBAI5DgG,EAJ4D,KAI3CC,EAJ2C,KAMnEC,oBAAU,WAAQ9C,KAAiB,CAACA,IAMpC,OAAI0C,EACK,kBAAC,EAAD,MAIP,yBAAK9E,UAAU,kBACb,kBAACE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAI,GACP,wCAEF,kBAACD,EAAA,EAAD,CAAKC,GAAI,EAAGJ,UAAU,cACpB,kBAACe,EAAA,EAAD,CAAQ6B,QAAQ,YAAY5C,UAAU,aAAa6E,QAf5B,kBAAMI,GAAmB,KAehD,uBAGJ,kBAAC/E,EAAA,EAAD,CAAKF,UAAU,mBACb,wBAAIA,UAAU,eA1BQyD,IAAE0B,IAAIxD,EAAS,SAACa,EAAQ4C,GAAT,OACzC,wBAAIpF,UAAU,cAAcoF,IAAKA,GAAK,kBAAC,EAAD,CAAY5C,OAAQA,EAAQM,KAAMO,EAAS0B,EAAMM,IAAK7C,EAAOkC,WA6BjG,kBAAC,GAAD,CAAsBP,KAAMa,EAAiBd,OArBlB,kBAAMe,GAAmB,SCtB7CK,GAAuB,SAAA/G,GAAK,OAAIA,EAAMiE,QAEtC+C,GAAiB7G,YAC5B4G,GACA,SAAA3G,GAAQ,OAAIA,EAAS6D,SAGVgD,GAAwB9G,YACnC4G,GACA,SAAA3G,GAAQ,OAAIA,EAASC,UCXVzB,GAAQ,CACnBsI,WAAY,oBACZC,mBAAoB,4BACpBC,mBAAoB,6BAQTC,GAAmB,SAAApD,GAAM,MAAK,CACzCxE,KAAMb,GAAMuI,mBACZlD,WAGWqD,GAAmB,SAAA3H,GAAK,MAAK,CACxCF,KAAMb,GAAMwI,mBACZzH,UClBWf,GAAQ,CACnB2I,cAAe,0BACfC,sBAAuB,kCACvBC,sBAAuB,kCAEvBC,gBAAiB,2BACjBC,wBAAyB,mCACzBC,wBAAyB,oCAQdC,GAAsB,SAAAC,GAAS,MAAK,CAC/CrI,KAAMb,GAAM4I,sBACZM,cAGWC,GAAsB,SAAApI,GAAK,MAAK,CAC3CF,KAAMb,GAAM6I,sBACZ9H,UCpBWqI,GAA0B,SAAAhI,GAAK,OAAIA,EAAM8H,WAEzCG,GAA2B9H,YACtC6H,GACA,SAAA5H,GAAQ,OAAIA,EAASC,UAGV6H,GAAoB/H,YAC/B6H,GACA,SAAA5H,GAAQ,OAAIA,EAAS0H,Y,yCCTVK,GAAmB,SAAAC,GAAI,OAClCC,KAAOD,GAAME,cAAcD,KAAOE,QAEvBC,GAAe,SAACC,EAAGC,GAAJ,OAC1BD,EAAEE,UAAYD,EAAEC,WCCZC,I,OAAe,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACdC,EAAWD,EAAXC,OACFC,EAAiB7D,IAAE0B,IAAIkC,EAAQ,SAAAE,GAAK,OAAI,IAAIC,KAAKD,EAAME,YAC1D5D,OAAO6C,IACPgB,KAAKX,IACLY,MAAM,EAAG,GAERC,GDA8B,IAAIJ,MAAOK,cCCzCC,GDC+B,IAAIN,MAAOO,WCCxCC,EAAoBV,EAAenC,IAAI,SAAAsC,GAC3C,IAAMQ,EAAOR,EAASI,cAChBK,EAAQT,EAASM,WACjBpB,EAAOc,EAASU,UAChBC,EAAG,UACJR,IAAaK,EAAO,GAAKA,EAAO,MAD5B,OACmCH,IAAcI,EAAQ,GDDrC,SAAAvB,GAAI,MACnC,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAClC,MAAO,MAAO,MAAO,MAAO,MAAO,OAAOA,EAAKoB,YCDwBM,CAAkBZ,GAAY,MAD5F,OACmGd,EADnG,YDHsB,SAAAA,GAAI,MACrC,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAAOA,EAAK2B,UCG+DC,CAAoBd,GAD/H,KAIT,OAFAG,EAAWK,EACXH,EAAYI,EACLE,IACNpE,KAAK,MAER,OACE,yBAAKhE,UAAU,2BACb,kBAAC+C,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKG,KAAN,KACE,kBAACH,EAAA,EAAKI,MAAN,CAAYqF,GAAG,MAAMpB,EAAShE,MAC9B,kBAACL,EAAA,EAAK0F,SAAN,CAAeD,GAAG,SAASR,QAQrCb,GAAauB,WAAa,CACxBtB,SAAUuB,KAAUC,OAAOC,YAGd1B,UCNAvH,I,OAAAA,YALS,SAAArB,GAAK,MAAK,CAChC8H,UAAWI,GAAkBlI,GAC7BuG,UAAW0B,GAAyBjI,KAGvBqB,CA/BO,SAAC,GAA8B,IAA5ByG,EAA2B,EAA3BA,UACvB,GADkD,EAAhBvB,UAEhC,OAAO,kBAAC,EAAD,MAST,OACEuB,EAAUyC,OAAS,EACjB,wBAAI9I,UAAU,4BARYqG,EAAUlB,IAAI,SAACiC,EAAUhC,GAAX,OAC1C,wBAAIpF,UAAU,sBAAsBoF,IAAKA,GACvC,kBAAC,GAAD,CAAcgC,SAAUA,QAUxB,gE,oBCjBA2B,GACU,2BADVA,GAEoB,yDAFpBA,GAGS,oCA6JTvJ,GAAqB,CACzBwJ,eLhJ4B,SAAC5F,GAAD,MAAW,CACvCpF,KAAMb,GAAM8I,gBACZ7C,UKiJaxD,eAAQ,KAAMJ,GAAdI,CA9Ja,SAAC,GAAsB,IAApBsE,EAAmB,EAAnBA,OAAQC,EAAW,EAAXA,KAC/B8E,EAAe3J,IACf4J,EAAiB5J,IACjB6J,EAAiB7J,IACjB8J,EAAiBtK,EAAaiK,IAO9BM,EAA4B,kBAChC,kBAAC7I,EAAA,EAAKG,MAAN,KACE,kBAACH,EAAA,EAAKmE,MAAN,uCAGA,kBAACnE,EAAA,EAAKK,QAAN,CAAc2H,GAAG,UACf,iDACA,gDACA,iDACA,6CA0FN,OACE,kBAACnE,EAAA,EAAD,CAAOH,OAAQA,EAAQC,KAAMA,EAAMnD,KAAK,KAAKsD,SAAS,SAASC,UAAQ,GACrE,kBAACF,EAAA,EAAMG,OAAP,CAAcC,aAAW,GACvB,kBAACJ,EAAA,EAAMlB,MAAP,6BAIF,kBAACkB,EAAA,EAAMnB,KAAP,KACE,kBAAC1C,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKG,MAAN,KACE,kBAACH,EAAA,EAAKmE,MAAN,4CAGA,kBAACnE,EAAA,EAAKK,QAAN,CAAc7C,KAAK,UAErB,kBAACwC,EAAA,EAAKG,MAAN,KACE,kBAACH,EAAA,EAAKmE,MAAN,0GAGA,kBAACnE,EAAA,EAAKK,QAAN,iBAAkBuI,EAAlB,CAAkCZ,GAAG,WACnC,gCAASO,IACT,gCAASA,IACT,gCAASA,MAGZK,EAAenK,QAAU8J,IA7GhC,kBAAC,IAAMO,SAAP,KACE,kBAAC9I,EAAA,EAAKG,MAAN,KACE,kBAACH,EAAA,EAAKmE,MAAN,2BAGA,6BACA,kBAAC,KAAD,iBAAgBuE,EAAhB,CAAgClJ,UAAU,mBAE5C,kBAACQ,EAAA,EAAKG,MAAN,KACE,kBAACH,EAAA,EAAKmE,MAAN,2BAGA,6BACA,kBAAC,KAAD,iBAAgBwE,EAAhB,CAAgCI,YAAY,OAAOC,WAAW,UAAUC,gBAAc,EAACC,oBAAkB,EAAC1J,UAAU,mBAErHqJ,KA+FID,EAAenK,QAAU8J,IA1FhC,kBAAC,IAAMO,SAAP,KACE,kBAAC9I,EAAA,EAAKG,MAAN,KACE,kBAACH,EAAA,EAAKmE,MAAN,wCAGA,kBAACnE,EAAA,EAAKK,QAAN,CAAc2H,GAAG,UACf,yCACA,0CACA,2CACA,4CAGJ,kBAAChI,EAAA,EAAKG,MAAN,KACE,kBAACH,EAAA,EAAKmE,MAAN,gCAGA,6BACA,kBAAC,KAAD,iBAAgBuE,EAAhB,CAAgClJ,UAAU,mBAE5C,kBAACQ,EAAA,EAAKG,MAAN,KACE,kBAACH,EAAA,EAAKmE,MAAN,2BAGA,6BACA,kBAAC,KAAD,iBAAgBwE,EAAhB,CAAgCI,YAAY,OAAOC,WAAW,UAAUC,gBAAc,EAACC,oBAAkB,EAAC1J,UAAU,mBAEtH,kBAACQ,EAAA,EAAKG,MAAN,KACE,kBAACH,EAAA,EAAKmE,MAAN,+BAGA,6BACA,kBAAC,KAAD,iBAAgBsE,EAAhB,CAA8BjJ,UAAU,mBAEzCqJ,KA0DID,EAAenK,QAAU8J,IArDhC,kBAAC,IAAMO,SAAP,KACGD,IACD,kBAAC7I,EAAA,EAAKG,MAAN,KACE,kBAACH,EAAA,EAAKmE,MAAN,wDAGA,6BACA,kBAAC,KAAD,iBAAgBuE,EAAhB,CAAgClJ,UAAU,mBAE5C,kBAACQ,EAAA,EAAKG,MAAN,KACE,kBAACH,EAAA,EAAKmE,MAAN,2BAGA,6BACA,kBAAC,KAAD,iBAAgBwE,EAAhB,CAAgCI,YAAY,OAAOC,WAAW,UAAUC,gBAAc,EAACC,oBAAkB,EAAC1J,UAAU,mBAEtH,kBAACQ,EAAA,EAAKG,MAAN,KACE,kBAACH,EAAA,EAAKmE,MAAN,uDAGA,6BACA,kBAAC,KAAD,iBAAgBsE,EAAhB,CAA8BjJ,UAAU,sBAmC1C,kBAACqE,EAAA,EAAMO,OAAP,KACE,kBAAC7D,EAAA,EAAD,CAAQ6B,QAAQ,QAAQiC,QAASX,GAAjC,UACA,kBAACnD,EAAA,EAAD,CAAQ8D,QAxIO,WACnB8E,QAAQC,IAAI,UACZ1F,MAsII,cClGF1E,GAAqB,CACzBqK,UPrDuB,SAAAC,GAAQ,MAAK,CACpC9L,KAAMb,GAAMsI,WACZqE,aOoDAC,aNlD0B,SAAAD,GAAQ,MAAK,CACvC9L,KAAMb,GAAM2I,cACZgE,cMmDalK,eAVS,SAAArB,GAAK,MAAK,CAChCuG,UAAWU,GAAsBjH,GACjCiE,OAAQ+C,GAAehH,KAQeiB,GAAzBI,CApDM,SAAC,GAA2D,IAAzDmF,EAAwD,EAAxDA,MAAOD,EAAiD,EAAjDA,UAAWtC,EAAsC,EAAtCA,OAAQqH,EAA8B,EAA9BA,UAAWE,EAAmB,EAAnBA,aACnDD,EAAa/E,EAAMiF,OAAnBF,SACR5E,oBAAU,WAAQ2E,EAAUC,IAAc,CAACA,EAAUD,IACrD3E,oBAAU,WACRJ,GAAaiF,EAAaD,IACzB,CAACA,EAAUC,EAAcjF,IALkD,MAO1C9F,oBAAS,GAPiC,mBAOvEiL,EAPuE,KAO3DC,EAP2D,KAS9E,OAAIpF,EACK,kBAAC,EAAD,MAGFtC,GACL,yBAAKxC,UAAU,iBACb,kBAACE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,4BAAKqC,EAAOY,QAGhB,kBAAClD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACY,EAAA,EAAD,CAAQ6B,QAAQ,YAAYiC,QAAS,kBAAMqF,GAAc,KAAzD,qBAGJ,kBAAChK,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAI,GACP,kBAAC,GAAD,QAGJ,kBAAC,GAAD,CAAqB+D,KAAM8F,EAAY/F,OAAQ,kBAAMgG,GAAc,S,mDCInE1K,I,OAAqB,CACzB2K,QrBIqB,iBAAO,CAC5BnM,KAAMb,EAAMQ,aqBFCiC,eARS,SAAArB,GAAK,MAAK,CAChCH,KAAMS,EAAaN,KAOmBiB,GAAzBI,CAxCA,SAAC,GAAuB,IAArBxB,EAAoB,EAApBA,KAAM+L,EAAc,EAAdA,QAKtB,OACE,yBAAKnK,UAAU,qBACb,kBAACoK,GAAA,EAAD,CAAQC,kBAAgB,EAACC,OAAO,KAAKC,GAAG,OAAO3H,QAAQ,QACrD,kBAACwH,GAAA,EAAOI,MAAR,CAAcC,KAAK,QACjB,yBAAKpK,IAAI,GAAGC,IAAKC,KAAWmK,OAAQ,MAEtC,kBAACN,GAAA,EAAOO,OAAR,CAAeC,gBAAc,0BAC7B,kBAACR,GAAA,EAAOS,SAAR,CAAiBnG,GAAG,yBAClB,kBAACoG,GAAA,EAAD,CAAK9K,UAAU,YACf,kBAAC8K,GAAA,EAAD,CAAK9K,UAAU,iBACZ5B,GAAQ,kBAAC2M,GAAA,EAAD,CAAaC,MAAO5M,EAAK6M,WAAYvG,GAAG,2BAC/C,kBAACqG,GAAA,EAAYG,KAAb,iBACA,kBAACH,GAAA,EAAYI,QAAb,MACA,kBAACJ,GAAA,EAAYG,KAAb,CAAkBrG,QAjBT,WACnBsF,MAgBU,kBCKCiB,eA3BC,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QACvBC,EbMmB,SAAAlG,GACvB,IAAMmG,EAAUnG,EAAIN,MAAM,aAE1B,IAAKyG,EACH,OAAO,KAGT,IAAMjI,EAAOiI,EAAQ,GACrB,OAAKjI,EAIEA,EAAKG,MAAM,KAAK,GAHd,KafI+H,CAAUJ,EAASK,UAChCH,EAASA,GAAkB,WAiB3B,OACE,kBAACT,GAAA,EAAD,CAAKlI,QAAQ,QAAQ+I,iBAAkBJ,EAAQvL,UAAU,cAAc4L,SAhBpD,SAAAxG,GACnB,OAAQA,GACN,IAAK,WACHkG,EAAQO,KAAK,QACb,MAEF,IAAK,UACHP,EAAQO,KAAK,mBAUf,kBAACf,GAAA,EAAIgB,KAAL,CAAUC,SAAS,YAAnB,YACA,kBAACjB,GAAA,EAAIgB,KAAL,CAAUC,SAAS,WAAnB,cCfAC,I,OAAiB,kBAAM,iDAgCvBxM,GAAqB,CACzByM,YvBTyB,iBAAO,CAChCjO,KAAMb,EAAMK,iBuBWCoC,eAAQ,KAAMJ,GAAdI,CAlCI,SAAC,GAA4B,IAA1BmF,EAAyB,EAAzBA,MAAOkH,EAAkB,EAAlBA,YAG3B,OAFA/G,oBAAU,WAAQ+G,KAAkB,CAACA,IAGnC,yBAAKjM,UAAU,eACb,yBAAKA,UAAU,sBACb,kBAAC,GAAD,OAEF,yBAAKA,UAAU,kBACb,kBAACC,EAAA,EAAD,CAAWiM,OAAK,GACd,kBAAChM,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAI,EAAGJ,UAAU,sBACpB,kBAAC,GAAD,OAEF,kBAACG,EAAA,EAAD,CAAKC,GAAI,GAAIJ,UAAU,qBACrB,kBAAC,IAAD,CAAOmM,OAAK,EAAC5I,KAAI,UAAKwB,EAAMM,IAAX,KAAmB+G,UAAWJ,KAC/C,kBAAC,IAAD,CAAOG,OAAK,EAAC5I,KAAI,UAAKwB,EAAMM,IAAX,YAA0B+G,UAAWC,KACtD,kBAAC,IAAD,CAAOF,OAAK,EAAC5I,KAAI,UAAKwB,EAAMM,IAAX,sBAAoC+G,UAAWE,YCzBxEC,GAAiB,SAAC,GAAD,IAAcC,EAAd,EAAGJ,UAAyBK,EAA5B,oCACrB,kBAAC,IAAD,iBACMA,EADN,CAEEC,OAAQ,SAAAC,GAAK,YAAuBC,IAAnBzL,IAA+B,kBAACqL,EAAcG,GAAY,kBAAC,IAAD,CAAU5M,GAAE,UAAK8M,sBAAL,iBAU5EC,GAPH,kBACV,kBAAC,IAAD,CAAQC,SAAUF,uBAChB,kBAAC,GAAD,CAAgBtJ,KAAK,OAAO6I,UAAWY,KACvC,kBAAC,IAAD,CAAOzJ,KAAK,SAAS6I,UAAWa,MCHhBC,QACW,cAA7BC,OAAO9B,SAAS+B,UAEe,UAA7BD,OAAO9B,SAAS+B,UAEhBD,OAAO9B,SAAS+B,SAASrI,MACvB,2D,+lBChBN,IAAMsI,GAAe,CACnBzO,SAAS,EACTb,MAAO,KACPK,KAAM,KACNF,MAAO,MA+BMoP,GA5BK,WAAmC,IAAlC/O,EAAiC,uDAAzB8O,GAAcE,EAAW,uCACpD,OAAQA,EAAOvP,MACb,KAAKb,EAAMC,QACT,OAAO,GAAP,GAAYmB,EAAZ,CAAmBK,SAAS,IAE9B,KAAKzB,EAAME,gBACT,OAAO,GAAP,GAAYkB,EAAZ,CAAmBK,SAAS,EAAOb,MAAOwP,EAAOxP,MAAOG,MAAO,OAEjE,KAAKf,EAAMM,sBACT,OAAO,GAAP,GAAYc,EAAZ,CAAmBK,SAAS,EAAOR,KAAMmP,EAAOnP,OAElD,KAAKjB,EAAMS,iBACT,OAAO,GAAP,GAAYW,EAAZ,CAAmBK,SAAS,EAAOV,MAAO,OAE5C,KAAKf,EAAMG,gBACX,KAAKH,EAAMO,sBACT,OAAO,GAAP,GAAYa,EAAZ,CAAmBK,SAAS,EAAOV,MAAOqP,EAAOrP,QAEnD,KAAKf,EAAMI,YACT,OAAO,GAAP,GAAYgB,EAAZ,CAAmBL,MAAO,OAM9B,OAAOK,G,wjBChCT,IAAM8O,GAAe,CACnB1L,QAAS,GACT/C,SAAS,EACTV,MAAO,MAqBMsP,GAlBQ,WAAmC,IAAlCjP,EAAiC,uDAAzB8O,GAAcE,EAAW,uCACvD,OAAQA,EAAOvP,MACb,KAAKb,EAAM2E,YACT,OAAO,MAAKvD,EAAZ,CAAmBK,SAAS,EAAM+C,QAAS,KAE7C,KAAKxE,EAAM4E,oBACT,OAAO,MAAKxD,EAAZ,CAAmBoD,QAAS4L,EAAO5L,QAAS/C,SAAS,EAAOV,MAAO,OAErE,KAAKf,EAAM6E,oBACT,OAAO,MAAKzD,EAAZ,CAAmBoD,QAAS,GAAI/C,SAAS,EAAOV,MAAOqP,EAAOrP,QAMlE,OAAOK,G,wjBCrBT,IAAM8O,GAAe,CACnB7K,OAAQ,KACR5D,SAAS,EACTV,MAAO,MAqBMuP,GAlBO,WAAmC,IAAlClP,EAAiC,uDAAzB8O,GAAcE,EAAW,uCACtD,OAAQA,EAAOvP,MACb,KAAKb,GAAMsI,WACT,OAAO,MAAKlH,EAAZ,CAAmBK,SAAS,EAAM4D,OAAQ,OAE5C,KAAKrF,GAAMuI,mBACT,OAAO,MAAKnH,EAAZ,CAAmBK,SAAS,EAAO4D,OAAQ+K,EAAO/K,OAAQtE,MAAO,OAEnE,KAAKf,GAAMwI,mBACT,OAAO,MAAKpH,EAAZ,CAAmBK,SAAS,EAAO4D,OAAQ,KAAMtE,MAAOqP,EAAOrP,QAMnE,OAAOK,G,wjBCrBT,IAAMmP,GAAwB,CAC5B9O,SAAS,EACTV,MAAO,KACPmI,UAAW,IAoBEsH,GAjBU,WAA4C,IAA3CpP,EAA0C,uDAAlCmP,GAAuBH,EAAW,uCAClE,OAAQA,EAAOvP,MACb,KAAKb,GAAM2I,cACT,OAAO,MAAKvH,EAAZ,CAAmBK,SAAS,IAE9B,KAAKzB,GAAM4I,sBACT,OAAO,MAAKxH,EAAZ,CAAmBK,SAAS,EAAOV,MAAO,KAAMmI,UAAWkH,EAAOlH,YAEpE,KAAKlJ,GAAM6I,sBACT,OAAO,MAAKzH,EAAZ,CAAmBK,SAAS,EAAOyH,UAAW,GAAInI,MAAOqP,EAAOrP,QAKpE,OAAOK,GChBMqP,gBAAgB,CAC7BpP,QACAmD,WACAa,UACA6D,e,6BCVa,IACbwH,YAAa,CACXC,WAAY,yBAEdC,WAAY,CACVD,WAAY,oC,qBCFVE,GAAiB,kCAAgB7M,MAE1B8M,GAAO,SAAC5I,EAAK6I,GAAwB,IAAlBC,EAAiB,uDAAP,GAClCC,EAAU,CACd/I,MACA6I,OACAC,UACAE,MAAM,GAER,OAAOC,KAAGL,KAAKG,IAGJG,GAAM,SAAClJ,GAAuB,IAAlB8I,EAAiB,uDAAP,GAC3BC,EAAU,CACd/I,MACA8I,UACAE,MAAM,GAER,OAAOC,KAAGC,IAAIH,IClBVI,GCC6BC,GAAI,WAAMX,WDCvCY,GAAU,SAAArP,GAAM,gBAAOmP,GAAP,YAAqBnP,IAK9BsP,GAAY,SAAAtP,GAAM,ODcR,SAACgG,GAAuB,IAAlB8I,EAAiB,uDAAP,GAErC,OADAA,EAAUS,OAAOC,OAAO,GAAIV,EAAS,CAAEW,cAAed,OAC/CO,GAAIlJ,EAAK8I,GCfhBY,CAAoBL,GAAQrP,KAEjB2P,GAAa,SAAC3P,EAAQ6O,GAAT,ODgBF,SAAC7I,EAAK6I,GAAwB,IAAlBC,EAAiB,uDAAP,GAE5C,OADAA,EAAUS,OAAOC,OAAO,GAAIV,EAAS,CAAEW,cAAed,OAC/CC,GAAK5I,EAAK6I,EAAMC,GCjBvBY,CAAqBL,GAAQrP,GAAS6O,IEV3BzO,GAAS,SAACwP,EAAUtP,GAAX,OFGCN,EEFrB,UAHa,OAGb,UFE6B6O,EEFI,CAAEe,WAAUtP,YFG7CoP,GAAiBL,GAAQrP,GAAS6O,EAAMgB,GADpB,IAAC7P,EAAQ6O,EAAMgB,GEAxBjD,GAAc,kBACzBkD,GANa,S,aCGLC,I,aAgBAC,I,iBAhBV,SAAUD,GAAV,kFAEsB,OAFG1P,EAAzB,EAAyBA,MAAOC,EAAhC,EAAgCA,SAAhC,kBAE4B2P,aAAKC,GAAoB7P,EAAOC,GAF5D,OAGI,OAHJ,SAEY5B,EAFZ,EAEYA,MAFZ,SAGUyR,aAAI1R,EAAcC,IAH5B,+BAYI,OAZJ,0BAKoB,oBACVG,EAAQ,CACZuR,QAFc,oBAGdC,QAAQ,EAAD,IAET/F,QAAQzL,MAAMA,GACdsD,IAXJ,UAYUgO,aAAIvR,EAAcC,IAZ5B,sDAgBA,SAAUmR,KAAV,yEAEiB,OAFjB,kBAEuBC,aAAKC,IAF5B,OAGI,OADMnR,EAFV,gBAGUoR,aAAIrR,EAAmBC,IAHjC,8BAUI,OAVJ,yBAKIuL,QAAQzL,MAAR,MACMA,EAAQ,CACZuR,QAAS,0BACTC,QAAQ,EAAD,IARb,UAUUF,aAAInR,EAAmBH,IAVjC,qDAcA,SAASyR,KACPnO,IACA2L,OAAO9B,SAASZ,KAAO,SAGzB,SAASmF,GAAT,GAAyC,IAAV7R,EAAS,EAATA,MAC7BuD,EAAavD,GAGf,SAAS8R,KACPrO,IACA2L,OAAO9B,SAASZ,KAAO,SAGV,+EACb,OADa,SACPqF,aAAW3S,EAAMC,QAASgS,IADnB,OAEb,OAFa,SAEPU,aAAW3S,EAAMQ,SAAUgS,IAFpB,OAGb,OAHa,SAGPG,aAAW3S,EAAMK,cAAe6R,IAHzB,OAKb,OALa,SAKPS,aAAW3S,EAAME,gBAAiBuS,IAL3B,OAMb,OANa,UAMPE,aAAW3S,EAAMO,sBAAuBmS,IANjC,wCC/Cf,IAEazN,GAAa,kBACxB+M,GAHa,WAKFY,GAAgB,SAAAjG,GAAQ,OACnCqF,GAAA,UANa,SAMb,YAA8BrF,KAEnBkG,GAAwB,SAAAlG,GAAQ,OAC3CqF,GAAA,UATa,SASb,YAA8BrF,EAA9B,eAEW7F,GAAkB,SAAC,GAAD,IAAGb,EAAH,EAAGA,KAAH,OAC7B+L,GAAA,UAZa,UAYkB,CAAE/L,U,aCHzB6M,I,aAYAC,I,iBAZV,SAAUD,KAAV,yEAEoB,OAFpB,kBAE0BX,aAAKa,IAF/B,OAGI,OADMxO,EAFV,gBAGU6N,aAAInN,EAAkBV,IAHhC,8BAQI,OARJ,yBAKU8N,EAAU,yBAChB9F,QAAQzL,MAAMuR,GACd9F,QAAQzL,MAAR,MAPJ,UAQUsR,aAAIlN,EAAkB,CAAEmN,UAASC,QAAQ,EAAD,MARlD,qDAYA,SAAUQ,GAAV,4EAEmB,OAFe9M,EAAlC,EAAkCA,KAAlC,kBAEyBkM,aAAKa,GAA+B,CAAE/M,SAF/D,OAGI,OADMgN,EAFV,gBAGUZ,aAAIjN,EAAuB6N,IAHrC,OAII,OAJJ,SAIUZ,aAAIpN,KAJd,+BAUI,OAVJ,0BAOoB,0BAChBuH,QAAQzL,MADQ,2BAEhByL,QAAQzL,MAAR,MATJ,UAUUsR,aAAI/M,EAAuB,EAAD,KAVpC,sDAce,+EACb,OADa,SACPqN,aAAW3S,EAAM2E,YAAamO,IADvB,OAEb,OAFa,SAEPH,aAAW3S,EAAM8E,kBAAmBiO,IAF7B,uC,iBCjCLG,I,iBAAV,SAAUA,GAAV,8EAEmB,OAFSvG,EAA5B,EAA4BA,SAA5B,kBAEyBwF,aAAKa,GAA6BrG,GAF3D,OAGI,OADMtH,EAFV,gBAGUgN,aAAI5J,GAAiBpD,IAH/B,8BAQI,OARJ,yBAKUiN,EAAU,6BAChB9F,QAAQzL,MAAMuR,GACd9F,QAAQzL,MAAR,MAPJ,UAQUsR,aAAI3J,GAAiB,CAAE4J,UAASC,QAAQ,EAAD,MARjD,qDAYe,+EACb,OADa,SACPI,aAAW3S,GAAMsI,WAAY4K,IADtB,uC,iBCZLC,I,iBAAV,SAAUA,GAAV,8EAEsB,OAFSxG,EAA/B,EAA+BA,SAA/B,kBAE4BwF,aAAKa,GAAqCrG,GAFtE,OAGI,OADMzD,EAFV,gBAGUmJ,aAAIpJ,GAAoBC,IAHlC,8BAUI,OAVJ,yBAKUnI,EAAQ,CACZuR,QAAS,0BACTC,QAAQ,EAAD,IAET/F,QAAQzL,MAAMA,GATlB,UAUUsR,aAAIlJ,GAAoBpI,IAVlC,qDAce,+EACb,OADa,SACP4R,aAAW3S,GAAM2I,cAAewK,IADzB,uC,qBCZA,+EACb,OADa,SACPC,aAAI,CACRC,aAAKC,IACLD,aAAKE,IACLF,aAAKG,IACLH,aAAKI,MALM,uC,cCDA,ICMTC,GDNS,WACb,IAAMC,EAAmB3D,OAAO4D,sCAAwCC,KAClEC,EAAiBC,eACjBC,EAAc,CAACF,GAEfJ,EAAQO,aAAYC,GAAaP,EAAiBQ,KAAe,WAAf,EAAmBH,KAG3E,OADAF,EAAeM,IAAIC,IACZX,ECFKY,GAEdC,IAAShF,OAAO,kBAAC,IAAD,CAAUmE,MAAOA,IAAO,kBAAC,GAAD,OAAoBc,SAASC,eAAe,SlBoH9E,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.3e66f510.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo-black.8cd50d3a.png\";","module.exports = __webpack_public_path__ + \"static/media/logo-white.93c7093f.png\";","export const types = {\n  SIGN_IN: 'auth/SIGN_IN',\n  SIGN_IN_SUCCESS: 'auth/SIGN_IN_SUCCESS',\n  SIGN_IN_FAILURE: 'auth/SIGN_IN_FAILURE',\n\n  CLEAR_ERROR: 'auth/CLEAR_ERROR',\n\n  GET_USER_INFO: 'auth/GET_USER_INFO',\n  GET_USER_INFO_SUCCESS: 'auth/GET_USER_INFO_SUCCESS',\n  GET_USER_INFO_FAILURE: 'auth/GET_USER_INFO_FAILURE',\n\n  SIGN_OUT: 'auth/SIGN_OUT',\n  SIGN_OUT_SUCCESS: 'auth/SIGN_OUT_SUCCESS',\n  SIGN_OUT_FAILURE: 'auth/SIGN_OUT_FAILURE'\n};\n\nexport const signIn = (email, password) => ({\n  type: types.SIGN_IN,\n  email,\n  password\n});\n\nexport const signInSuccess = token => ({\n  type: types.SIGN_IN_SUCCESS,\n  token\n});\n\nexport const signInFailure = error => ({\n  type: types.SIGN_IN_FAILURE,\n  error\n});\n\nexport const clearError = () => ({\n  type: types.CLEAR_ERROR\n});\n\nexport const getUserInfo = () => ({\n  type: types.GET_USER_INFO\n});\n\nexport const getUserInfoSuccess = user => ({\n  type: types.GET_USER_INFO_SUCCESS,\n  user\n});\n\nexport const getUserInfoFailure = error => ({\n  type: types.GET_USER_INFO_FAILURE,\n  error\n});\n\nexport const signOut = () => ({\n  type: types.SIGN_OUT\n});\n\nexport const signOutSuccess = () => ({\n  type: types.SIGN_OUT_SUCCESS\n});\n\nexport const signOutFailure = error => ({\n  type: types.SIGN_OUT_FAILURE,\n  error\n});\n","import { createSelector } from 'reselect';\n\nexport const authDomainSelector = state => state.auth;\n\nexport const loadingSelector = createSelector(\n  authDomainSelector,\n  substate => substate.loading\n);\n\nexport const authErrorSelector = createSelector(\n  authDomainSelector,\n  substate => substate.error\n);\n\nexport const tokenSelector = createSelector(\n  authDomainSelector,\n  substate => substate.token\n);\n\nexport const userSelector = createSelector(\n  authDomainSelector,\n  substate => substate.user\n);\n","import { useState } from \"react\";\n\nexport function useFormInput(initValue = '') {\n  const [value, setValue] = useState(initValue);\n  const onChange = e => setValue(e.target.value);\n  return { value, onChange };\n}\n\nexport function useDatePickerInput(initValue = '') {\n  const [value, setValue] = useState(initValue);\n  return { selected: value, onChange: setValue };\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { signIn } from '../../redux/auth/actions';\nimport { tokenSelector } from '../../redux/auth/selectors';\nimport { Button, Form, Col, Row, Container } from 'react-bootstrap';\nimport { Redirect } from 'react-router-dom';\nimport logoImage from '../../assets/images/logo-black.png';\nimport './login-layout.scss';\nimport { useFormInput } from '../../utils/hooks';\n\nconst LoginLayout = ({ signIn, token }) => {\n  const emailInput = useFormInput();\n  const passwordInput = useFormInput();\n\n  function handleLogin(e) {\n    e.preventDefault();\n    signIn(emailInput.value, passwordInput.value);\n  }\n\n  if (token !== null) {\n    return <Redirect to=\"/app\" />;\n  }\n\n  return (\n    <div className=\"login-layout\">\n      <Container>\n        <Row>\n          <Col md={4} />\n          <Col md={4}>\n            <img alt=\"\" className=\"logo-img\" src={logoImage} />\n            <Form onSubmit={handleLogin}>\n              <Form.Group controlId=\"formHorizontalEmail\">\n                <Form.Control type=\"email\" placeholder=\"Email\" {...emailInput} />\n              </Form.Group>\n\n              <Form.Group controlId=\"formHorizontalPassword\">\n                <Form.Control type=\"password\" placeholder=\"Password\" {...passwordInput} />\n              </Form.Group>\n\n              <Form.Group>\n                <Button type=\"submit\" size=\"lg\" block>Sign in</Button>\n              </Form.Group>\n            </Form>\n          </Col>\n          <Col md={4} />\n        </Row>\n      </Container>\n    </div>\n  );\n};\n\nLoginLayout.propTypes = {\n  token: PropTypes.string,\n  signIn: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  token: tokenSelector(state)\n});\n\nconst mapDispatchToProps = {\n  signIn\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginLayout);\n","export const storageKeys = {\n  AUTH_TOKEN: 'AUTH_TOKEN'\n};\n\nexport const getAuthToken = () => sessionStorage.getItem(storageKeys.AUTH_TOKEN);\n\nexport const setAuthToken = token => sessionStorage.setItem(storageKeys.AUTH_TOKEN, token);\n\nexport const clearAuthToken = () => sessionStorage.removeItem(storageKeys.AUTH_TOKEN);\n","import { createSelector } from \"reselect\";\n\nexport const selectCoursesDomain = state => state.courses;\n\nexport const coursesSelector = createSelector(\n  selectCoursesDomain,\n  substate => substate.courses\n);\n\nexport const coursesLoadingSelector = createSelector(\n  selectCoursesDomain,\n  substate => substate.loading\n);\n","export const types = {\n  GET_COURSES: 'courses/GET_COURSES',\n  GET_COURSES_SUCCESS: 'courses/GET_COURSES_SUCCESS',\n  GET_COURSES_FAILURE: 'courses/GET_COURSES_FAILURE',\n  CREATE_NEW_COURSE: 'courses/CREATE_NEW_COURSE',\n  CREATE_NEW_COURSE_SUCCESS: 'courses/CREATE_NEW_COURSE_SUCCESS',\n  CREATE_NEW_COURSE_FAILURE: 'courses/CREATE_NEW_COURSE_FAILURE'\n};\n\nexport const getCourses = () => ({\n  type: types.GET_COURSES\n});\n\nexport const getCoursesSuccess = courses => ({\n  type: types.GET_COURSES_SUCCESS,\n  courses\n});\n\nexport const getCoursesFailure = error => ({\n  type: types.GET_COURSES_FAILURE,\n  error\n});\n\nexport const createNewCourse = name => ({\n  type: types.CREATE_NEW_COURSE,\n  name\n});\n\nexport const createNewCourseSuccess = course => ({\n  type: types.CREATE_NEW_COURSE_SUCCESS,\n  course\n});\n\nexport const createNewCourseFailure = error => ({\n  type: types.CREATE_NEW_COURSE_FAILURE,\n  error\n});\n","import React from 'react';\nimport { Spinner as BootStrapSpinner } from 'react-bootstrap';\nimport './spinner-component.scss';\n\nconst Spinner = () =>\n  <div className=\"spinner-component\"><BootStrapSpinner animation=\"grow\" className=\"spinner\" variant=\"primary\" /></div>;\n\nexport default Spinner;\n","import React from 'react';\nimport { Card } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport './course-card-component.scss';\n\nconst CourseCard = ({ course, link }) => {\n  const renderBody = () => (\n    <Card style={{ width: '18rem' }}>\n      <Card.Body>\n        <Card.Title>{course.name}</Card.Title>\n      </Card.Body>\n    </Card>\n  );\n\n  return (\n    <div className=\"course-card-component\">\n      <Link className=\"course-link\" to={link}>\n        {renderBody()}\n      </Link>\n    </div>\n  );\n};\n\nCourseCard.propTypes = {\n  course: PropTypes.object.isRequired,\n  link: PropTypes.string\n};\n\nexport default CourseCard;\n","import _ from 'lodash';\n\nexport const joinUrls = (base, path) => {\n  const baseParts = _.split(base, '/');\n  const pathParts = _.split(path, '/');\n  const result = _.concat(baseParts, pathParts)\n    .filter((part, index) => index === 0 || part !== '')\n    .join('/');\n\n  return result;\n}\n\nexport const getScreen = url => {\n  const results = url.match(/app\\/(.*)/);\n\n  if (!results) {\n    return null;\n  }\n\n  const path = results[1];\n  if (!path) {\n    return null;\n  }\n\n  return path.split('/')[0];\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { createNewCourse } from '../../redux/courses/actions';\nimport PropTypes from 'prop-types';\nimport { Modal, Button, Form } from 'react-bootstrap';\nimport { useFormInput } from '../../utils/hooks';\n\nconst CreateNewCourseModal = ({ onHide, show, createNewCourse }) => {\n  const courseNameInput = useFormInput();\n\n  const handleSubmit = () => {\n    createNewCourse(courseNameInput.value);\n    onHide();\n  };\n\n  return (\n    <Modal onHide={onHide} show={show} size=\"lg\" backdrop=\"static\" centered>\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          Create new course\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form>\n          <Form.Group>\n            <Form.Label>\n              Name\n            </Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Course name\" {...courseNameInput}></Form.Control>\n          </Form.Group>\n        </Form>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button onClick={handleSubmit}>Submit</Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nCreateNewCourseModal.propTypes = {\n  createNewCourse: PropTypes.func.isRequired,\n  onHide: PropTypes.func,\n  show: PropTypes.bool\n};\n\nconst mapDispatchToProps = {\n  createNewCourse\n};\n\nexport default connect(null, mapDispatchToProps)(CreateNewCourseModal);\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Row, Col } from 'react-bootstrap';\nimport { coursesSelector, coursesLoadingSelector } from '../../redux/courses/selectors';\nimport { getCourses } from '../../redux/courses/actions';\nimport Spinner from '../../components/Spinner/Spinner';\nimport PropTypes from 'prop-types';\nimport CourseCard from '../../components/CourseCard/CourseCard';\nimport { joinUrls } from '../../utils/utils';\nimport _ from 'lodash';\nimport './courses-layout.scss';\nimport CreateNewCourseModal from './CreateNewCourseModal';\n\n\nconst CoursesLayout = ({ courses, isLoading, getCourses, match }) => {\n  const renderCourses = () => _.map(courses, (course, key) =>\n    <li className=\"course-item\" key={key}><CourseCard course={course} link={joinUrls(match.url, course.id)} /></li>);\n\n  const [showCreateModal, setShowCreateModal] = useState(false);\n\n  useEffect(() => { getCourses(); }, [getCourses]);\n\n  const handleShowCreateCourse = () => setShowCreateModal(true);\n\n  const handleHideCreateCourse = () => setShowCreateModal(false);\n\n  if (isLoading) {\n    return <Spinner />;\n  }\n\n  return (\n    <div className=\"courses-layout\">\n      <Row>\n        <Col md={8}>\n          <h3>Courses</h3>\n        </Col>\n        <Col md={4} className=\"operations\">\n          <Button variant=\"secondary\" className=\"create-btn\" onClick={handleShowCreateCourse}>Create new course</Button>\n        </Col>\n      </Row>\n      <Row className=\"course-list-row\">\n        <ul className=\"course-list\">\n          {renderCourses()}\n        </ul>\n      </Row>\n      <CreateNewCourseModal show={showCreateModal} onHide={handleHideCreateCourse} />\n    </div>\n  )\n};\n\nconst mapStateToProps = state => ({\n  courses: coursesSelector(state),\n  isLoading: coursesLoadingSelector(state)\n});\n\nconst mapDispatchToProps = {\n  getCourses\n};\n\nCoursesLayout.propTypes = {\n  courses: PropTypes.array,\n  isLoading: PropTypes.bool,\n  getCourses: PropTypes.func.isRequired\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CoursesLayout);\n","import { createSelector } from 'reselect';\n\nexport const courseDomainSelector = state => state.course;\n\nexport const courseSelector = createSelector(\n  courseDomainSelector,\n  substate => substate.course\n);\n\nexport const courseLoadingSelector = createSelector(\n  courseDomainSelector,\n  substate => substate.loading\n);\n","export const types = {\n  GET_COURSE: 'course/GET_COURSE',\n  GET_COURSE_SUCCESS: 'course/GET_COURSE_SUCCESS',\n  GET_COURSE_FAILURE: 'course/GET_COURSE_FAILURE'\n};\n\nexport const getCourse = courseId => ({\n  type: types.GET_COURSE,\n  courseId\n});\n\nexport const getCourseSuccess = course => ({\n  type: types.GET_COURSE_SUCCESS,\n  course\n});\n\nexport const getCourseFailure = error => ({\n  type: types.GET_COURSE_FAILURE,\n  error\n});\n","export const types = {\n  GET_REMINDERS: 'reminders/GET_REMINDERS',\n  GET_REMINDERS_SUCCESS: 'reminders/GET_REMINDERS_SUCCESS',\n  GET_REMINDERS_FAILURE: 'reminders/GET_REMINDERS_FAILURE',\n\n  CREATE_REMINDER: 'reminder/CREATE_REMINDER',\n  CREATE_REMINDER_SUCCESS: 'reminder/CREATE_REMINDER_SUCCESS',\n  CREATE_REMINDER_FAILURE: 'reminder/CREATE_REMINDER_FAILURE'\n};\n\nexport const getReminders = courseId => ({\n  type: types.GET_REMINDERS,\n  courseId\n});\n\nexport const getRemindersSuccess = reminders => ({\n  type: types.GET_REMINDERS_SUCCESS,\n  reminders\n});\n\nexport const getRemindersFailure = error => ({\n  type: types.GET_REMINDERS_FAILURE,\n  error\n});\n\nexport const createReminder = (name) => ({\n  type: types.CREATE_REMINDER,\n  name\n});\n","import { createSelector } from 'reselect';\n\nexport const remindersDomainSelector = state => state.reminders;\n\nexport const remindersLoadingSelector = createSelector(\n  remindersDomainSelector,\n  substate => substate.loading\n);\n\nexport const remindersSelector = createSelector(\n  remindersDomainSelector,\n  substate => substate.reminders\n);\n","import moment from 'moment';\n\nexport const isSameOrAfterNow = date =>\n  moment(date).isSameOrAfter(moment.now());\n\nexport const compareDates = (a, b) =>\n  a.getTime() - b.getTime();\n\nexport const isCurrentYear = date =>\n  new Date().getFullYear() === date.getFullYear();\n\nexport const isCurrentMonth = date =>\n  new Date().getMonth() === date.getMonth() && isCurrentYear(date);\n\nexport const getCurrentYear = () => new Date().getFullYear();\n\nexport const getCurrentMonth = () => new Date().getMonth();\n\nexport const getWeekdayShortForm = date =>\n  ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'][date.getDay()];\n\nexport const getMonthShortForm = date =>\n  [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\n    \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"][date.getMonth()];","import React from 'react';\nimport { Card } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport { isSameOrAfterNow, compareDates, getCurrentYear, getCurrentMonth, getWeekdayShortForm, getMonthShortForm } from '../../utils/dateUtils';\nimport _ from 'lodash';\nimport './reminder-card-component.scss';\n\nconst ReminderCard = ({ reminder }) => {\n  const { events } = reminder;\n  const upcommingDates = _.map(events, event => new Date(event.dateTime))\n    .filter(isSameOrAfterNow)\n    .sort(compareDates)\n    .slice(0, 5);\n\n  let currYear = getCurrentYear();\n  let currMonth = getCurrentMonth();\n\n  const upcommingDatesStr = upcommingDates.map(dateTime => {\n    const year = dateTime.getFullYear();\n    const month = dateTime.getMonth();\n    const date = dateTime.getDate();\n    const str =\n      `${currYear === year ? '' : year + ': '}${currMonth === month ? '' : getMonthShortForm(dateTime) + ': '}${date}(${getWeekdayShortForm(dateTime)})`;\n    currYear = year;\n    currMonth = month;\n    return str;\n  }).join(', ');\n\n  return (\n    <div className=\"reminder-card-component\">\n      <Card>\n        <Card.Body>\n          <Card.Title as=\"h6\">{reminder.name}</Card.Title>\n          <Card.Subtitle as=\"small\">{upcommingDatesStr}</Card.Subtitle>\n        </Card.Body>\n      </Card>\n      {/* <EventsList events={events} /> */}\n    </div>\n  );\n};\n\nReminderCard.prototypes = {\n  reminder: PropTypes.object.isRequired\n};\n\nexport default ReminderCard;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { remindersSelector, remindersLoadingSelector } from '../../redux/reminders/selectors';\nimport PropTypes from 'prop-types';\nimport Spinner from '../Spinner/Spinner';\nimport ReminderCard from './ReminderCard';\nimport './reminders-list-component.scss';\n\nconst RemindersList = ({ reminders, isLoading }) => {\n  if (isLoading) {\n    return <Spinner />\n  }\n\n  const renderReminders = () => reminders.map((reminder, key) =>\n    <li className=\"reminders-list-item\" key={key}>\n      <ReminderCard reminder={reminder} />\n    </li>\n  );\n\n  return (\n    reminders.length > 0 ?\n      <ul className=\"reminders-list-component\">\n        {renderReminders()}\n      </ul>\n      :\n      <p>No reminders has been created.</p>\n  );\n};\n\nRemindersList.propTypes = {\n  reminders: PropTypes.array,\n  isLoading: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  reminders: remindersSelector(state),\n  isLoading: remindersLoadingSelector(state)\n});\n\nexport default connect(mapStateToProps)(RemindersList);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createReminder } from '../../redux/reminders/actions';\nimport { Modal, Form, Button } from 'react-bootstrap';\nimport DatePicker from \"react-datepicker\";\nimport { useDatePickerInput, useFormInput } from '../../utils/hooks';\n\nconst expirationTypes = {\n  ONE_END_DATE: 'Yes (e.g., an exam date)',\n  MORE_THAN_ONE_END_DATE: 'Yes, more than one (e.g., weekly assignment due dates)',\n  NO_END_DATE: 'Not really (e.g., daily practice)'\n};\n\nconst CreateReminderModal = ({ onHide, show }) => {\n  const endDateInput = useDatePickerInput();\n  const startDateInput = useDatePickerInput();\n  const startTimeInput = useDatePickerInput();\n  const canExpireInput = useFormInput(expirationTypes.ONE_END_DATE);\n\n  const handleSubmit = () => {\n    console.log(\"submit\");\n    onHide();\n  }\n\n  const renderSendInAdvancedInput = () => (\n    <Form.Group>\n      <Form.Label>\n        When should reminders be sent?\n        </Form.Label>\n      <Form.Control as=\"select\" >\n        <option>1 hour before</option>\n        <option>1 day before</option>\n        <option>1 week before</option>\n        <option>Custom</option>\n      </Form.Control>\n    </Form.Group>\n  );\n\n  const renderWithExpireDate = () => (\n    <React.Fragment>\n      <Form.Group>\n        <Form.Label>\n          What is that date?\n            </Form.Label>\n        <br />\n        <DatePicker {...startDateInput} className=\"form-control\" />\n      </Form.Group>\n      <Form.Group>\n        <Form.Label>\n          What is that time?\n            </Form.Label>\n        <br />\n        <DatePicker {...startTimeInput} timeCaption=\"Time\" dateFormat=\"h:mm aa\" showTimeSelect showTimeSelectOnly className=\"form-control\" />\n      </Form.Group>\n      {renderSendInAdvancedInput()}\n    </React.Fragment>\n  );\n\n  const renderWithMoreThanOneExpire = () => (\n    <React.Fragment>\n      <Form.Group>\n        <Form.Label>\n          How often do these dates occur?\n        </Form.Label>\n        <Form.Control as=\"select\">\n          <option>Daily</option>\n          <option>Weekly</option>\n          <option>Monthly</option>\n          <option>Custom</option>\n        </Form.Control>\n      </Form.Group>\n      <Form.Group>\n        <Form.Label>\n          What is the first date?\n        </Form.Label>\n        <br />\n        <DatePicker {...startDateInput} className=\"form-control\" />\n      </Form.Group>\n      <Form.Group>\n        <Form.Label>\n          What is that time?\n        </Form.Label>\n        <br />\n        <DatePicker {...startTimeInput} timeCaption=\"Time\" dateFormat=\"h:mm aa\" showTimeSelect showTimeSelectOnly className=\"form-control\" />\n      </Form.Group>\n      <Form.Group>\n        <Form.Label>\n          What is the last date?\n        </Form.Label>\n        <br />\n        <DatePicker {...endDateInput} className=\"form-control\" />\n      </Form.Group>\n      {renderSendInAdvancedInput()}\n    </React.Fragment>\n  );\n\n  const renderNoEndDateInputs = () => (\n    <React.Fragment>\n      {renderSendInAdvancedInput()}\n      <Form.Group>\n        <Form.Label>\n          When would you like to start sending reminders?\n        </Form.Label>\n        <br />\n        <DatePicker {...startDateInput} className=\"form-control\" />\n      </Form.Group>\n      <Form.Group>\n        <Form.Label>\n          What is that time?\n        </Form.Label>\n        <br />\n        <DatePicker {...startTimeInput} timeCaption=\"Time\" dateFormat=\"h:mm aa\" showTimeSelect showTimeSelectOnly className=\"form-control\" />\n      </Form.Group>\n      <Form.Group>\n        <Form.Label>\n          When would you like to stop sending reminders?\n        </Form.Label>\n        <br />\n        <DatePicker {...endDateInput} className=\"form-control\" />\n      </Form.Group>\n    </React.Fragment>\n  );\n\n  return (\n    <Modal onHide={onHide} show={show} size=\"lg\" backdrop=\"static\" centered >\n      <Modal.Header closeButton>\n        <Modal.Title>\n          Create new reminder\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form>\n          <Form.Group>\n            <Form.Label>\n              What is the title of your reminder?\n            </Form.Label>\n            <Form.Control type=\"text\" />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>\n              Is there an expiration date (e.g., assignment deadline, exam date) associated with this reminder?\n            </Form.Label>\n            <Form.Control {...canExpireInput} as=\"select\">\n              <option>{expirationTypes.ONE_END_DATE}</option>\n              <option>{expirationTypes.MORE_THAN_ONE_END_DATE}</option>\n              <option>{expirationTypes.NO_END_DATE}</option>\n            </Form.Control>\n          </Form.Group>\n          {canExpireInput.value === expirationTypes.ONE_END_DATE && renderWithExpireDate()}\n          {canExpireInput.value === expirationTypes.MORE_THAN_ONE_END_DATE && renderWithMoreThanOneExpire()}\n          {canExpireInput.value === expirationTypes.NO_END_DATE && renderNoEndDateInputs()}\n        </Form>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"light\" onClick={onHide}>Cancel</Button>\n        <Button onClick={handleSubmit}>Submit</Button>\n      </Modal.Footer>\n    </Modal>\n  )\n};\n\nCreateReminderModal.propTypes = {\n  onHide: PropTypes.func.isRequired,\n  createReminder: PropTypes.func.isRequired,\n  show: PropTypes.bool\n};\n\nconst mapDispatchToProps = {\n  createReminder\n};\n\nexport default connect(null, mapDispatchToProps)(CreateReminderModal);\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { courseSelector, courseLoadingSelector } from '../../redux/course/selectors';\nimport { getCourse } from '../../redux/course/actions';\nimport PropTypes from 'prop-types';\nimport Spinner from '../../components/Spinner/Spinner';\nimport { getReminders } from '../../redux/reminders/actions';\nimport RemindersList from '../../components/RemindersList/RemindersList';\nimport { Row, Col, Button } from 'react-bootstrap';\nimport CreateReminderModal from './CreateReminderModal';\n\nconst CourseLayout = ({ match, isLoading, course, getCourse, getReminders }) => {\n  const { courseId } = match.params;\n  useEffect(() => { getCourse(courseId); }, [courseId, getCourse]);\n  useEffect(() => {\n    isLoading && getReminders(courseId);\n  }, [courseId, getReminders, isLoading]);\n\n  const [showCreate, setShowCreate] = useState(false);\n\n  if (isLoading) {\n    return <Spinner />;\n  }\n\n  return course &&\n    <div className=\"course-layout\">\n      <Row>\n        <Col>\n          <h3>{course.name}</h3>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Button variant=\"secondary\" onClick={() => setShowCreate(true)}>Create reminder</Button>\n        </Col>\n      </Row>\n      <Row>\n        <Col md={5}>\n          <RemindersList />\n        </Col>\n      </Row>\n      <CreateReminderModal show={showCreate} onHide={() => setShowCreate(false)} />\n    </div>\n};\n\nCourseLayout.propTypes = {\n  match: PropTypes.object.isRequired,\n  isLoading: PropTypes.bool,\n  course: PropTypes.object,\n  getCourse: PropTypes.func.isRequired,\n  getReminders: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  isLoading: courseLoadingSelector(state),\n  course: courseSelector(state)\n});\n\nconst mapDispatchToProps = {\n  getCourse,\n  getReminders\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CourseLayout);\n","import React from 'react';\nimport { Navbar, Nav, NavDropdown } from 'react-bootstrap';\nimport logoImage from '../../assets/images/logo-white.png';\nimport PropTypes from 'prop-types';\nimport { userSelector } from '../../redux/auth/selectors';\nimport { connect } from 'react-redux';\nimport { signOut } from '../../redux/auth/actions';\nimport './app-bar-component.scss';\n\nconst AppBar = ({ user, signOut }) => {\n  const handleLogOut = () => {\n    signOut();\n  };\n\n  return (\n    <div className=\"app-bar-component\">\n      <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n        <Navbar.Brand href=\"/app\">\n          <img alt=\"\" src={logoImage} height={30} />\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\n          <Nav className=\"mr-auto\" />\n          <Nav className=\"drop-down-nav\">\n            {user && <NavDropdown title={user.preferName} id=\"collasible-nav-dropdown\">\n              <NavDropdown.Item>Settings</NavDropdown.Item>\n              <NavDropdown.Divider />\n              <NavDropdown.Item onClick={handleLogOut}>Log out</NavDropdown.Item>\n            </NavDropdown>}\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    </div>\n  );\n};\n\nAppBar.propTypes = {\n  user: PropTypes.object,\n  signOut: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  user: userSelector(state)\n});\n\nconst mapDispatchToProps = {\n  signOut\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AppBar);\n","import React from 'react';\nimport { Nav } from 'react-bootstrap';\nimport { withRouter } from 'react-router-dom';\nimport { getScreen } from '../../utils/utils';\n\nconst SideBar = ({ location, history }) => {\n  let screen = getScreen(location.pathname);\n  screen = screen ? screen : 'overview';\n\n  const handleSelect = key => {\n    switch (key) {\n      case 'overview':\n        history.push('/app');\n        break;\n\n      case 'courses':\n        history.push('/app/courses');\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return (\n    <Nav variant=\"pills\" defaultActiveKey={screen} className=\"flex-column\" onSelect={handleSelect}>\n      <Nav.Link eventKey=\"overview\">Overview</Nav.Link>\n      <Nav.Link eventKey=\"courses\">Courses</Nav.Link>\n    </Nav>\n  );\n};\n\nexport default withRouter(SideBar);\n","import React, { useEffect } from 'react';\nimport CoursesLayout from '../CoursesLayout/CoursesLayout';\nimport CourseLayout from '../CourseLayout/CourseLayout';\nimport { Route } from 'react-router-dom';\nimport AppBar from '../../components/AppBar/AppBar';\nimport { connect } from 'react-redux';\nimport { getUserInfo } from '../../redux/auth/actions';\nimport PropTypes from 'prop-types';\nimport SideBar from '../../components/SideBar/SideBar';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport './main-layout.scss';\n\nconst OverViewLayout = () => <div>OverViewLayout</div>;\n\nconst MainLayout = ({ match, getUserInfo }) => {\n  useEffect(() => { getUserInfo(); }, [getUserInfo]);\n\n  return (\n    <div className=\"main-layout\">\n      <div className=\"app-bar-contaioner\">\n        <AppBar />\n      </div>\n      <div className=\"main-container\">\n        <Container fluid>\n          <Row>\n            <Col md={2} className=\"side-bar-container\">\n              <SideBar />\n            </Col>\n            <Col md={10} className=\"content-container\">\n              <Route exact path={`${match.url}/`} component={OverViewLayout} />\n              <Route exact path={`${match.url}/courses`} component={CoursesLayout} />\n              <Route exact path={`${match.url}/courses/:courseId`} component={CourseLayout} />\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    </div>\n  );\n};\n\nMainLayout.propTypes = {\n  getUserInfo: PropTypes.func.isRequired\n};\n\nconst mapDispatchToProps = {\n  getUserInfo\n};\n\nexport default connect(null, mapDispatchToProps)(MainLayout);\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom';\nimport LoginLayout from './layouts/LoginLayout/LoginLayout';\nimport { getAuthToken } from './utils/storageUtils';\nimport MainLayout from './layouts/MainLayout/MainLayout';\n\nconst ProtectedRoute = ({ component: Component, ...rest }) =>\n  <Route\n    {...rest}\n    render={props => getAuthToken() !== undefined ? <Component {...props} /> : <Redirect to={`${process.env.PUBLIC_URL}/login`} />}\n  />;\n\nconst App = () => (\n  <Router basename={process.env.PUBLIC_URL}>\n    <ProtectedRoute path=\"/app\" component={MainLayout} />\n    <Route path=\"/login\" component={LoginLayout} />\n  </Router>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { types } from \"./actions\";\n\nconst initialState = {\n  loading: false,\n  token: null,\n  user: null,\n  error: null\n};\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.SIGN_IN:\n      return { ...state, loading: true };\n\n    case types.SIGN_IN_SUCCESS:\n      return { ...state, loading: false, token: action.token, error: null };\n\n    case types.GET_USER_INFO_SUCCESS:\n      return { ...state, loading: false, user: action.user };\n\n    case types.SIGN_OUT_SUCCESS:\n      return { ...state, loading: false, error: null };\n\n    case types.SIGN_IN_FAILURE:\n    case types.GET_USER_INFO_FAILURE:\n      return { ...state, loading: false, error: action.error };\n\n    case types.CLEAR_ERROR:\n      return { ...state, error: null };\n\n    default:\n      break;\n  }\n\n  return state;\n};\n\nexport default authReducer;\n","import { types } from \"./actions\";\n\nconst initialState = {\n  courses: [],\n  loading: false,\n  error: null\n};\n\nconst coursesReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.GET_COURSES:\n      return { ...state, loading: true, courses: [] };\n\n    case types.GET_COURSES_SUCCESS:\n      return { ...state, courses: action.courses, loading: false, error: null };\n\n    case types.GET_COURSES_FAILURE:\n      return { ...state, courses: [], loading: false, error: action.error };\n\n    default:\n      break;\n  }\n\n  return state;\n};\n\nexport default coursesReducer;\n","import { types } from \"./actions\";\n\nconst initialState = {\n  course: null,\n  loading: false,\n  error: null\n};\n\nconst courseReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.GET_COURSE:\n      return { ...state, loading: true, course: null };\n\n    case types.GET_COURSE_SUCCESS:\n      return { ...state, loading: false, course: action.course, error: null };\n\n    case types.GET_COURSE_FAILURE:\n      return { ...state, loading: false, course: null, error: action.error };\n\n    default:\n      break;\n  }\n\n  return state;\n};\n\nexport default courseReducer;\n","import { types } from \"./actions\";\n\nconst remindersInitialState = {\n  loading: false,\n  error: null,\n  reminders: []\n};\n\nconst remindersReducer = (state = remindersInitialState, action) => {\n  switch (action.type) {\n    case types.GET_REMINDERS:\n      return { ...state, loading: true };\n\n    case types.GET_REMINDERS_SUCCESS:\n      return { ...state, loading: false, error: null, reminders: action.reminders };\n\n    case types.GET_REMINDERS_FAILURE:\n      return { ...state, loading: false, reminders: [], error: action.error };\n\n    default:\n      break;\n  }\n  return state;\n};\n\nexport default remindersReducer;\n","import { combineReducers } from \"redux\";\nimport auth from \"./auth/reducers\";\nimport courses from \"./courses/reducers\";\nimport course from \"./course/reducers\";\nimport reminders from \"./reminders/reducers\";\n\nexport default combineReducers({\n  auth,\n  courses,\n  course,\n  reminders\n});\n","export default {\n  development: {\n    serviceUrl: 'http://localhost:8080'\n  },\n  production: {\n    serviceUrl: 'https://follothru.herokuapp.com'\n  }\n};\n","import rp from 'request-promise';\nimport { getAuthToken } from '../utils/storageUtils';\n\nconst getBearerToken = () => `Bearer ${getAuthToken()}`;\n\nexport const post = (url, body, headers = {}) => {\n  const options = {\n    url,\n    body,\n    headers,\n    json: true\n  };\n  return rp.post(options);\n};\n\nexport const get = (url, headers = {}) => {\n  const options = {\n    url,\n    headers,\n    json: true\n  };\n  return rp.get(options);\n};\n\nexport const authGet = (url, headers = {}) => {\n  headers = Object.assign({}, headers, { Authorization: getBearerToken() });\n  return get(url, headers);\n};\n\nexport const authPost = (url, body, headers = {}) => {\n  headers = Object.assign({}, headers, { Authorization: getBearerToken() });\n  return post(url, body, headers);\n};\n","import { getBackendUrl } from \"../config/config\";\nimport * as httpService from \"./httpService\";\n\nconst backendUrl = getBackendUrl();\n\nconst makeUrl = target => `${backendUrl}/${target}`;\n\nexport const doPost = (target, body, header) =>\n  httpService.post(makeUrl(target), body, header);\n\nexport const doAuthGet = target =>\n  httpService.authGet(makeUrl(target));\n\nexport const doAuthPost = (target, body) =>\n  httpService.authPost(makeUrl(target), body);\n","import urls from \"./env\";\n\nexport const env = process.env.NODE_ENV;\n\nexport const getBackendUrl = () => urls[env].serviceUrl;\n","import * as client from \"./client\";\n\nconst target = 'user';\n\nexport const signIn = (username, password) =>\n  client.doPost(`${target}/login`, { username, password });\n\nexport const getUserInfo = () =>\n  client.doAuthGet(target);\n","import { takeLatest, call, put } from \"@redux-saga/core/effects\";\nimport { types, signInSuccess, signInFailure, getUserInfoFailure, getUserInfoSuccess } from \"./actions\";\nimport { setAuthToken, clearAuthToken } from \"../../utils/storageUtils\";\nimport * as authService from \"../../services/authService\";\n\nfunction* handleSignIn({ email, password }) {\n  try {\n    const { token } = yield call(authService.signIn, email, password);\n    yield put(signInSuccess(token));\n  } catch (err) {\n    const message = 'Failed to sign in';\n    const error = {\n      message,\n      details: err\n    }\n    console.error(error);\n    clearAuthToken();\n    yield put(signInFailure(error));\n  }\n}\n\nfunction* handleGetUserInfo() {\n  try {\n    const user = yield call(authService.getUserInfo);\n    yield put(getUserInfoSuccess(user));\n  } catch (err) {\n    console.error(err);\n    const error = {\n      message: 'Failed to get user info',\n      details: err\n    };\n    yield put(getUserInfoFailure(error));\n  }\n}\n\nfunction handleSignOut() {\n  clearAuthToken();\n  window.location.href = \"/login\";\n}\n\nfunction handleSignInSuccess({ token }) {\n  setAuthToken(token);\n}\n\nfunction handleGetUserInfoFailure() {\n  clearAuthToken();\n  window.location.href = \"/login\";\n}\n\nexport default function* () {\n  yield takeLatest(types.SIGN_IN, handleSignIn);\n  yield takeLatest(types.SIGN_OUT, handleSignOut);\n  yield takeLatest(types.GET_USER_INFO, handleGetUserInfo);\n\n  yield takeLatest(types.SIGN_IN_SUCCESS, handleSignInSuccess);\n  yield takeLatest(types.GET_USER_INFO_FAILURE, handleGetUserInfoFailure);\n}\n","import * as client from \"./client\";\n\nconst entity = 'course';\n\nexport const getCourses = () =>\n  client.doAuthGet(entity);\n\nexport const getCourseById = courseId =>\n  client.doAuthGet(`${entity}/${courseId}`);\n\nexport const getRemindersForCourse = courseId =>\n  client.doAuthGet(`${entity}/${courseId}/reminder`);\n\nexport const createNewCourse = ({ name }) =>\n  client.doAuthPost(`${entity}`, { name });\n","import { takeLatest, call, put } from \"@redux-saga/core/effects\";\nimport {\n  types,\n  getCoursesSuccess,\n  getCoursesFailure,\n  createNewCourseFailure,\n  createNewCourseSuccess,\n  getCourses\n} from \"./actions\";\nimport * as courseService from \"../../services/courseService\";\n\nfunction* handleGetCourses() {\n  try {\n    const courses = yield call(courseService.getCourses);\n    yield put(getCoursesSuccess(courses));\n  } catch (error) {\n    const message = 'Failed to load courses';\n    console.error(message);\n    console.error(error);\n    yield put(getCoursesFailure({ message, details: error }));\n  }\n}\n\nfunction* handleCreateNewCourse({ name }) {\n  try {\n    const result = yield call(courseService.createNewCourse, { name });\n    yield put(createNewCourseSuccess(result));\n    yield put(getCourses());\n  }\n  catch (error) {\n    const message = 'Failed to create course';\n    console.error(message);\n    console.error(error);\n    yield put(createNewCourseFailure(error));\n  }\n}\n\nexport default function* () {\n  yield takeLatest(types.GET_COURSES, handleGetCourses);\n  yield takeLatest(types.CREATE_NEW_COURSE, handleCreateNewCourse);\n}\n","import { takeLatest, put, call } from \"@redux-saga/core/effects\";\nimport { types, getCourseFailure, getCourseSuccess } from \"./actions\";\nimport * as courseService from \"../../services/courseService\";\n\nfunction* handleGetCourse({ courseId }) {\n  try {\n    const course = yield call(courseService.getCourseById, courseId);\n    yield put(getCourseSuccess(course));\n  } catch (error) {\n    const message = 'Failed to load course info';\n    console.error(message);\n    console.error(error);\n    yield put(getCourseFailure({ message, details: error }));\n  }\n}\n\nexport default function* () {\n  yield takeLatest(types.GET_COURSE, handleGetCourse);\n}\n","import { takeLatest, put, call } from \"@redux-saga/core/effects\";\nimport { types, getRemindersFailure, getRemindersSuccess } from \"./actions\";\nimport * as courseService from \"../../services/courseService\";\n\nfunction* handleGetReminders({ courseId }) {\n  try {\n    const reminders = yield call(courseService.getRemindersForCourse, courseId);\n    yield put(getRemindersSuccess(reminders));\n  } catch (err) {\n    const error = {\n      message: 'Failed to get reminders',\n      details: err\n    }\n    console.error(error);\n    yield put(getRemindersFailure(error));\n  }\n}\n\nexport default function* () {\n  yield takeLatest(types.GET_REMINDERS, handleGetReminders);\n}\n","import { all, fork } from \"@redux-saga/core/effects\";\nimport authSagas from \"./auth/sagas\";\nimport coursesSagas from \"./courses/sagas\";\nimport courseSagas from \"./course/sagas\";\nimport remindersSagas from './reminders/sagas';\n\nexport default function* () {\n  yield all([\n    fork(authSagas),\n    fork(coursesSagas),\n    fork(courseSagas),\n    fork(remindersSagas)\n  ]);\n}\n","import { createStore, compose, applyMiddleware } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootReducer from \"../redux/rootReducer\";\nimport rootSaga from \"../redux/rootSaga\";\n\nexport default function () {\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  const sagaMiddleware = createSagaMiddleware();\n  const middlewares = [sagaMiddleware];\n\n  const store = createStore(rootReducer, composeEnhancers(applyMiddleware(...middlewares)));\n\n  sagaMiddleware.run(rootSaga);\n  return store;\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport * as serviceWorker from './serviceWorker';\nimport 'typeface-roboto';\nimport configureStore from './config/configureStore';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nconst store = configureStore();\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}